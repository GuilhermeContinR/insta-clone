[{"/Users/ddtotal/Documents/GitHub/insta/src/index.js":"1","/Users/ddtotal/Documents/GitHub/insta/src/pages/Post/index.js":"2","/Users/ddtotal/Documents/GitHub/insta/src/pages/Home/index.js":"3","/Users/ddtotal/Documents/GitHub/insta/src/services/firebase.js":"4","/Users/ddtotal/Documents/GitHub/insta/src/services/imageUpload.js":"5"},{"size":229,"mtime":1612196148230,"results":"6","hashOfConfig":"7"},{"size":721,"mtime":1612362729971,"results":"8","hashOfConfig":"7"},{"size":8028,"mtime":1612991101352,"results":"9","hashOfConfig":"7"},{"size":637,"mtime":1612988778689,"results":"10","hashOfConfig":"7"},{"size":2973,"mtime":1612990100976,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"yleu2c",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/ddtotal/Documents/GitHub/insta/src/index.js",[],["24","25"],"/Users/ddtotal/Documents/GitHub/insta/src/pages/Post/index.js",[],"/Users/ddtotal/Documents/GitHub/insta/src/pages/Home/index.js",[],"/Users/ddtotal/Documents/GitHub/insta/src/services/firebase.js",[],"/Users/ddtotal/Documents/GitHub/insta/src/services/imageUpload.js",["26"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { storage, db } from './firebase'\nimport Modal from '@material-ui/core/Modal';\nimport { Button, TextField } from '@material-ui/core';\nimport './imageUpload.css';\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[3],\n        padding: theme.spacing(2, 4, 3),\n    },\n    p10: {\n        margin: theme.spacing(1),\n    },\n}));\n// 2:44:52\n\nfunction ImageUpload({username}){\n\n    const classes = useStyles();\n\n    const [image, setImage] = useState([]);\n    const [caption, setCaption] = useState('');\n    const [progress, setProgress] = useState(0);\n\n\n    const handleChange = async (e) =>{\n        console.log(e.target.files[0]);\n        if(e.target.files[0]){\n            setImage(e.target.files[0]);\n        }\n    }\n    const handleUpload = async (e) => {\n\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n        \n        uploadTask.on(\n            \"state_changed\",\n            (snapshot)=>{\n                // progress\n                 const progress = Math.round(\n                     (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                 );\n                 setProgress(progress);\n            },\n            (error) => {\n                console.log(error);\n            },\n            () => {\n                storage\n                .ref(\"images\")\n                .child(image.name)\n                .getDownloadURL()\n                .then( url => {\n                    db.collection(\"post\").add({\n                        // firebase.firestore.fieldValue.serverTimeStamp()\n                        timestamp: Math.floor(Date.now() / 1000) ,\n                       caption:caption,\n                       imageUrl: url,\n                       username:username,\n                    });\n\n                    setProgress(0);\n                    setCaption(\"\");\n                    setImage(null);\n\n                });\n            }\n        )\n    }\n\n    return(\n        <div className=\"imageUpload\">\n            <progress className=\"progress\" value={progress} max=\"100\" />\n            <TextField\n                label=\"Caption\"\n                type=\"text\"\n                value={caption}\n                onChange={e => { setCaption(e.target.value) }}\n                variant=\"outlined\"\n                m={2}\n                className={classes.p10}\n            />\n            <input\n                type=\"file\"\n                onChange={handleChange}\n                className={classes.p10}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleUpload}\n                className={classes.p10}\n               \n            >\n                Upload\n            </Button>\n        </div>\n    )\n\n\n}\n\nexport default ImageUpload;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":4,"column":8,"nodeType":"33","messageId":"34","endLine":4,"endColumn":13},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]